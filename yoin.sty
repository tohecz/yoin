%%
%% This is file `yoin.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% yoin-1.dtx  (with options: `package')
%% ----------------------------------------------------------------
%% mypkg --- Some code I wrote
%% E-mail: some.guy@some.domain
%% Released under the LaTeX Project Public License v1.3c or later
%% See http://www.latex-project.org/lppl.txt
%% ----------------------------------------------------------------
%% 
%% These lines, starting with two "%", will be extracted so can be used
%% to copy some kind of header into target (.sty) files: the team .dtx
%% use this to dump the copyright header from the meta-comment block into
%% the output.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\RequirePackage{expl3,l3keys2e,l3regex,xparse}
\RequirePackage{zref-totpages}
\RequirePackage[abspath]{currfile}
\RequirePackage{pdfpages}
\ProvidesExplPackage{yoin}{2016/02/28}{v0.0.1}{Joining articles into issues}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\seq_new:N \l__yoin_seq_tmpa_seq
\cs_new_protected:Nn \yoin_seq_gappend_clist:Nn {
   \seq_set_from_clist:Nn \l__yoin_seq_tmpa_seq { #2 }
   \seq_gconcat:NNN #1 #1 \l__yoin_seq_tmpa_seq
}
\tl_new:N \l__yoin_keys_tmpa_tl
\cs_generate_variant:Nn \keys_set:nn { nV }
\cs_new_protected:Nn \yoin_keys_set_from_file:nn {
   \tl_set_from_file:Nnn \l__yoin_keys_tmpa_tl { } { #2 }
   \keys_set:nV { #1 } \l__yoin_keys_tmpa_tl
}
\cs_generate_variant:Nn \keyval_parse:NNn { NNV }
\cs_new_protected:Nn \yoin_keyval_parse_from_file:NNn {
   \tl_set_from_file:Nnn \l__yoin_keys_tmpa_tl { } { #3 }
   \keyval_parse:NNV #1 #2 \l__yoin_keys_tmpa_tl
}
\msg_new:nnn { yoin } { boolean-values-only }
   { Key ~ '#1' ~ accepts ~ boolean ~ values ~ only.}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\bool_new:N \g_yoin_subprocess_bool
\bool_new:N \g_yoin_article_bool
\bool_new:N \g_yoin_dryrun_bool
\bool_new:N \g_yoin_onlyflags_bool
\bool_new:N \g_yoin_onlytags_bool
\seq_new:N \g_yoin_flags_seq
\seq_new:N \g_yoin_tags_seq
\seq_new:N \g_yoin_onlyflags_seq
\seq_new:N \g_yoin_onlytags_seq
\tl_new:N \g_yoin_jobname_tl
\tl_gset_eq:NN \g_yoin_jobname_tl \c_job_name_tl
\msg_new:nnnn { yoin } { unknown-flag }
   { The ~ flag ~ `#1' ~ is ~ unknown ~ to ~ `yoin'. }
   { You ~ either ~ misspelled ~ it ~ or ~forgot ~ to ~ declare ~ it. }
\msg_new:nnnn { yoin } { unknown-tag }
   { The ~ tag ~ `#1' ~ is ~ unknown ~ to ~ `yoin'. }
   { You ~ either ~ misspelled ~ it ~ or ~forgot ~ to ~ declare ~ it. }
\prg_new_protected_conditional:Nnn \yoin_if_tag_defined:n { T, F, TF } {
   \seq_if_in:NnTF \g_yoin_tags_seq { #1 } { \prg_return_true: } { \prg_return_false: }
}
\prg_new_protected_conditional:Nnn \yoin_if_flag_defined:n { T, F, TF } {
   \seq_if_in:NnTF \g_yoin_flags_seq { #1 } { \prg_return_true: } { \prg_return_false: }
}
\cs_new_protected:Nn \__yoin_error_if_tag_undefined:n {
   \yoin_if_tag_defined:nF { #1 } { \msg_error:nnn { yoin } { unknown-tag } { #1 } }
}
\cs_new_protected:Nn \__yoin_error_if_flag_undefined:n {
   \yoin_if_flag_defined:nF { #1 } { \msg_error:nnn { yoin } { unknown-flag } { #1 } }
}
\keys_define:nn { yoin / general } {
   dryrun .bool_gset:N = \g_yoin_dryrun_bool,
   dryrun .initial:n = { false },
   article .bool_gset:N = \g_yoin_article_bool,
   article .initial:n = { false },
   subprocess .bool_gset:N = \g_yoin_subprocess_bool,
   subprocess .initial:n = { false },
   defineflags .code:n = \yoin_seq_gappend_clist:Nn \g_yoin_flags_seq { #1 },
   definetags .code:n = \yoin_seq_gappend_clist:Nn \g_yoin_tags_seq { #1 },
   onlyflags .code:n =
      \seq_gset_from_clist:Nn \g_yoin_onlyflags_seq { #1 }
      \bool_gset_true:N \g_yoin_onlyflags_bool
      ,
   onlytags .code:n =
      \seq_gset_from_clist:Nn \g_yoin_onlytags_seq { #1 }
      \bool_gset_true:N \g_yoin_onlytags_bool
      ,
   jobname .tl_gset:N = \g_yoin_jobname_tl
}
\ProcessKeysPackageOptions { yoin / general }
\cs_new_protected:Nn \yoin_setup:n {
   \keys_set:nn { yoin / general } { #1 }
}
\NewDocumentCommand \yoinSetup { R[]{} } {
   \yoin_setup:n { #1 }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\prop_new:N \l__yoin_yoinmeta_prop
\cs_new_protected:Nn \__yoin_yoinmeta_storekey:nn {
   \prop_put:Nnn \l__yoin_yoinmeta_prop { #1 } { #2 }
}
\cs_new_protected:Nn \__yoin_yoinmeta_storekey:n {
   \prop_put:Nnn \l__yoin_yoinmeta_prop { #1 } { }
}
\cs_new_protected:Nn \yoin_yoinmeta:n {
   \keyval_parse:NNn \__yoin_yoinmeta_storekey:n \__yoin_yoinmeta_storekey:nn { #1 }
}
\NewDocumentCommand \yoinMeta { R[]{} } {
   \yoin_yoinmeta:n { #1 }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\seq_new:N \g_yoin_yoinadd_seq
\cs_new:Nn \yoin_yoinadd_prop:n {
   g__yoin_article_#1_prop
}
\cs_generate_variant:Nn \yoin_yoinadd_prop:n { V }
\cs_new:Nn \yoin_yoinadd_prop_item:nn {
   \prop_item:cn { \yoin_yoinadd_prop:n { #1 } } { #2 }
}
\cs_generate_variant:Nn \yoin_yoinadd_prop_item:nn { V }
\tl_new:N \l__yoin_yoinadd_currentarticle_tl
\cs_new_protected:Nn \__yoin_yoinadd_storekey:nn {
   \prop_gput:cnn { \yoin_yoinadd_prop:V \l__yoin_yoinadd_currentarticle_tl } { #1 } { #2 }
}
\cs_new_protected:Nn \__yoin_yoinadd_storekey:n {
   \prop_gput:cnn { \yoin_yoinadd_prop:V \l__yoin_yoinadd_currentarticle_tl } { #1 } { }
}
\cs_new_protected:Nn \yoin_yoinadd:nn {
   \tl_set:Nn \l__yoin_yoinadd_currentarticle_tl { #1 }
   \seq_if_in:NnTF \g_yoin_yoinadd_seq { #1 } {
      \msg_error:nnn { yoin } { yoinadd-duplicatearticle } { #1 }
   } {
      \seq_gput_right:Nn \g_yoin_yoinadd_seq { #1 }
      \prop_new:c { \yoin_yoinadd_prop:n { #1 } }
      \clist_map_inline:nn { forceopenany, forceopenright, ignore } {
         \__yoin_yoinadd_storekey:nn { ##1 } { 0 }
      }
      \__yoin_yoinadd_storekey:nn { article } { #1 }
      \keys_set:nn { yoin / yoinadd } { #2 }
      \file_if_exist:nTF { #1 / #1 .yoin } {
         \yoin_keyval_parse_from_file:NNn
            \__yoin_yoinadd_storekey:n
            \__yoin_yoinadd_storekey:nn
            { #1 / #1 .yoin }
      } {
         \msg_error:nnn { yoin } { yoinadd-dotyoinmissing } { #1 }
      }
   }
}
\NewDocumentCommand \yoinAdd { m O{} } {
   \yoin_yoinadd:nn { #1 } { #2 }
}
\msg_new:nnn { yoin } { yoinadd-duplicatearticle }
   { The ~ article ~ "#1" ~ has ~ been ~ already ~ processed ~ by ~ \token_to_str:N \yoinAdd ~.}
\msg_new:nnn { yoin } { yoinadd-dotyoinmissing }
   { The ~ article ~ "#1" ~ has ~ no ~ file "#1/#1.yoin" ~ and ~ was ~ not ~ properly ~ set ~ up.}
\clist_map_inline:nn { textualkey } {
   \keys_define:nn { yoin / yoinadd } {
      #1 .code:n = \__yoin_yoinadd_storekey:nn { #1 } { ##1 },
   }
}
\clist_map_inline:nn { forceopenany, forceopenright, ignore } {
   \keys_define:nn { yoin / yoinadd } {
      #1 .choice:,
      #1 / true .code:n = \__yoin_yoinadd_storekey:nn { #1 } { 1 },
      #1 / false .code:n = \__yoin_yoinadd_storekey:nn { #1 } { 0 },
      #1 / unknown .code:n = \msg_error:nnx { yoin } { boolean-values-only } { \l_keys_key_tl },
   }
}
\keys_define:nn { yoin / yoinadd } {
   tag .code:n =
      \__yoin_error_if_tag_undefined:n { #1 }
      \__yoin_yoinadd_storekey:nn { tag } { #1 }
      ,
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\keys_define:nn { yoin / yoinshell } {
   flag .code:n =
      \__yoin_error_if_flag_undefined:n { #1 }
      \bool_if:NT \g_yoin_onlyflags_bool {
         \seq_if_in:NnF \g_yoin_onlyflags_seq { #1 } {
            \keys_set:nn { yoin / yoinshell } {
               ignore = true
            }
         }
      }
      ,
   ignore .bool_set:N = \l_yoin_yoinshell_ignore_bool,
   ignore .initial:n = { false },
}
\file_if_exist:nTF { shellesc.sty } {
   \RequirePackage { shellesc }
} {
   \def \ShellEscape #1 { \immediate \write 18 { #1 } }
}
\cs_new_protected:Nn \__yoin_yoinshell_shellescape:n {
   \ShellEscape { #1 }
}
\cs_new_protected:Nn \__yoin_yoinshell_begin:n {
   \group_begin:
   \keys_set:nn { yoin / yoinshell } { #1 }
   \bool_if:NT \g_yoin_subprocess_bool {
      \bool_set_true:N \l_yoin_yoinshell_ignore_bool
   }
   \bool_if:NTF \l_yoin_yoinshell_ignore_bool {
      \DeclareDocumentCommand \RunForEach { O{} m } { }
      \DeclareDocumentCommand \Run { O{} m } { }
      \DeclareDocumentCommand \WriteMeta { O{} } { }
   } {
      \DeclareDocumentCommand \RunForEach { O{} m } { \yoin_yoinshell_runforeach:nn { ##1 } { ##2 } }
      \DeclareDocumentCommand \Run { O{} m } { \yoin_yoinshell_run:nn { ##1 } { ##2 } }
      \DeclareDocumentCommand \WriteMeta { O{} } { \yoin_yoinshell_writemeta:n { ##1 } }
      \yoin_yoinshell_writemeta:n { }
   }
}
\cs_new_protected:Nn \__yoin_yoinshell_end: {
   \group_end:
}
\NewDocumentEnvironment { yoinshell } { O{} } {
   \__yoin_yoinshell_begin:n { #1 }
} {
   \__yoin_yoinshell_end:
}
\tl_new:N \l__yoin_yoinshell_runforarticle_tag_tl
\tl_new:N \l__yoin_yoinshell_runforeach_onlytag_tl
\tl_set:Nn \l__yoin_yoinshell_runforeach_onlytag_tl { \q_no_value }
\keys_define:nn { yoin / runforeach } {
   onlytag .code:n =
      \__yoin_error_if_tag_undefined:n { #1 }
      \tl_set:Nn \l__yoin_yoinshell_runforeach_onlytag_tl { #1 }
      ,
}
\tl_new:N \l__yoin_yoinshell_runforarticle_tmpa_tl
\cs_new_protected:Nn \__yoin_yoinshell_runforarticle_keyfromprop:nnN {
   \prop_get:cnN { \yoin_yoinadd_prop:n { #1 } } { #2 } \l__yoin_yoinshell_runforarticle_tmpa_tl
   \quark_if_no_value:NTF \l__yoin_yoinshell_runforarticle_tmpa_tl {
      \def #3 {}
   } {
      \let #3 \l__yoin_yoinshell_runforarticle_tmpa_tl
   }
}
\cs_new_protected:Nn \yoin_yoinshell_runforeach:nn {
   \group_begin:
   \keys_set:nn { yoin / runforeach } { #1 }
   \seq_map_inline:Nn \g_yoin_yoinadd_seq { \__yoin_yoinshell_runforarticle:nn { ##1 } { #2 } }
   \group_end:
}
\cs_new_protected:Nn \__yoin_yoinshell_runforarticle:nn {
   \prop_get:cnN { \yoin_yoinadd_prop:n { #1 } } { tag } \l__yoin_yoinshell_runforarticle_tag_tl
   \bool_if:nT {
      \quark_if_no_value_p:N \l__yoin_yoinshell_runforarticle_tag_tl
      ||
      \quark_if_no_value_p:N \l__yoin_yoinshell_runforeach_onlytag_tl
      ||
      \tl_if_eq_p:NN \l__yoin_yoinshell_runforeach_onlytag_tl \l__yoin_yoinshell_runforarticle_tag_tl
   }{
      \group_begin:
      \__yoin_yoinshell_runforarticle_keyfromprop:nnN { #1 } { article } \Article
      \__yoin_yoinshell_runforarticle_keyfromprop:nnN { #1 } { jobname } \Jobname
      \__yoin_yoinshell_runforarticle_keyfromprop:nnN { #1 } { firstpage } \FirstPage
      \__yoin_yoinshell_shellescape:n { #2 }
      \group_end:
   }
}
\cs_new_protected:Nn \yoin_yoinshell_run:nn {
   \group_begin:
   \keys_set:nn { yoin / run } { #1 }
   \let \Jobname \c_job_name_tl
   \__yoin_yoinshell_shellescape:n { #2 }
   \group_end:
}
\iow_new:N \g__yoin_yoinshell_iow
\cs_new_protected:Nn \yoin_yoinshell_writemeta:n {
   \group_begin:
   \yoin_yoinmeta:n { #1 }
   \iow_open:Nn \g__yoin_yoinshell_iow { \g_yoin_jobname_tl .yoin1 }
   \prop_map_inline:Nn \l__yoin_yoinmeta_prop {
      \iow_now:Nn \g__yoin_yoinshell_iow { meta-##1 ~ = ~ ##2, }
   }
   \iow_close:N \g__yoin_yoinshell_iow
   \group_end:
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new_protected:Nn \__yoin_article_write_keyval:nn {
   \iow_now:Nn \g__yoin_article_dotyoin_iow { #1 ~ = ~ #2 , }
}
\cs_generate_variant:Nn \__yoin_article_write_keyval:nn { nx, nV }

\cs_new_protected:Nn \yoin_article_write_meta:nn {
   \__yoin_article_write_keyval:nn { article-#1 } { #2 }
}

\cs_new_protected:Nn \yoin_article_writekeys: {
   \__yoin_article_write_keyval:nV { jobname } \c_job_name_tl
   \__yoin_article_write_keyval:nx { totpages } { \ztotpages }
   \__yoin_article_write_keyval:nV { currdir } \l_yoin_article_currdir_tl
   \__yoin_article_write_keyval:nx { firstpage } { \int_use:N \l_yoin_article_firstpage_int }
}

\prop_new:N \l__yoin_article_readkeys_prop

\cs_new_protected:Nn \yoin_article_set_readkey:nn {
   \prop_put:Nnn \l__yoin_article_readkeys_prop { #1 } { #2 }
}
\cs_generate_variant:Nn \yoin_article_set_readkey:nn { Vn }

\int_new:N \l_yoin_article_firstpage_int
\int_set:Nn \l_yoin_article_firstpage_int { 1 }

\keys_define:nn { yoin / toarticle } {
   firstpage .code:n =
      \int_set:Nn \l_yoin_article_firstpage_int { #1 }
      \yoin_article_set_readkey:nn { firstpage } { #1 }
      ,

   parent .code:n =
      \file_if_exist:nT { ../ #1 .yoin1 } {
         \yoin_keys_set_from_file:nn { yoin / toarticle } { ../ #1 .yoin1 }
      }
      \yoin_article_set_readkey:nn { parent } { #1 }
      ,

   unknown .code:n =
      \yoin_article_set_readkey:Vn \l_keys_key_tl { #1 }
      ,
}

\bool_new:N \g__yoin_article_readkeys_bool
\bool_gset_true:N \g__yoin_article_readkeys_bool

\cs_new_protected:Nn \yoin_article_readkeys: {
   \bool_if:NT \g__yoin_article_readkeys_bool {
      \file_if_exist:nT { ../ \l_yoin_article_currdir_tl .yoin } {
         \yoin_keys_set_from_file:nn { yoin / toarticle } { ../ \l_yoin_article_currdir_tl .yoin }
      }
   }
   \bool_gset_false:N \g__yoin_article_readkeys_bool
}

\cs_new:Nn \yoin_article_meta:n {
   \prop_item:Nn \l__yoin_article_readkeys_prop { meta-#1 }
}

\NewDocumentCommand \yoinArticleMeta { m } {
   \yoin_article_meta:n { #1 }
}

\tl_new:N \l__yoin_article_tmpa_tl
\seq_new:N \l__yoin_article_tmpa_seq
\tl_new:N \l_yoin_article_currdir_tl
\cs_generate_variant:Nn \regex_extract_once:nnN { nV }
\cs_new_protected:Nn \yoin_article_getcurrdir:N {
   \tl_set:Nx \l__yoin_article_tmpa_tl { \currfileabsdir }
   \regex_extract_once:nVN { /([^/]+)/\Z } \l__yoin_article_tmpa_tl \l__yoin_article_tmpa_seq
   \seq_get_right:NN \l__yoin_article_tmpa_seq #1
}

\iow_new:N \g__yoin_article_dotyoin_iow
\bool_if:NT \g_yoin_article_bool {
   \yoin_article_getcurrdir:N \l_yoin_article_currdir_tl
   \iow_open:Nn \g__yoin_article_dotyoin_iow { \l_yoin_article_currdir_tl .yoin }
   \yoin_article_readkeys:
   \AtBeginDocument {
      \setcounter { page } { \l_yoin_article_firstpage_int }
      \yoin_article_writekeys:
   }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msg_new:nnn { yoin } { forceopenanyright }
   { The ~ article ~ '#1' ~ has ~ both ~ 'forceopenany' ~ and ~ 'forceopenright' ~ keys ~ set. }
\cs_new_protected:Nn \yoin_yoinprocess:n {
   \keys_set:nn { yoin / yoinprocess } { #1 }
   \clearpage
   \bool_if:NTF \l__yoin_yoinprocess_cleardoublepage_bool {
      \bool_if:NTF \l__yoin_yoinprocess_setpagenumber_bool {
         \int_if_odd:nT { \value { page } + \l__yoin_yoinprocess_setpagenumber_int } {
            \__yoin_yoinprocess_clearonepage:
         }
         \setcounter { page } { \int_use:N \l__yoin_yoinprocess_setpagenumber_int }
      } {
         \__yoin_yoinprocess_cleardoublepage:
      }
   } {
      \bool_if:NTF \l__yoin_yoinprocess_setpagenumber_bool {
         \setcounter { page } { \int_use:N \l__yoin_yoinprocess_setpagenumber_int }
      } {
         \prg_do_nothing:
      }
   }
   \int_gset:Nn \g__yoin_page_int { \value { page } }
   \seq_map_inline:Nn \g_yoin_yoinadd_seq {
      \bool_if:nT {
         \int_compare_p:nNn {
            \yoin_yoinadd_prop_item:nn { ##1 } { forceopenany }
            + \yoin_yoinadd_prop_item:nn { ##1 } { forceopenright }
         } = { 2 }
      } {
         \msg_error:nnn { yoin } { forceopenanyright } { ##1 }
      }
      \bool_if:nT {
         \int_compare_p:nNn { \yoin_yoinadd_prop_item:nn { ##1 } { forceopenright } } = { 1 }
         || (
            \l__yoin_yoinprocess_openright_bool
            &&
            \int_compare_p:nNn { \yoin_yoinadd_prop_item:nn { ##1 } { forceopenany } } = { 0 }
         )
      } {
         \__yoin_yoinprocess_cleardoublepage:
      }
      \bool_if:NT \l__yoin_yoinprocess_output_bool {
         \includepdf [ pages = - ] { ##1 / \yoin_yoinadd_prop_item:nn { ##1 } { jobname } .pdf }
      }
      \iow_open:Nn \g__yoin_yoinprocess_iow { ##1 .yoin }
      \bool_if:NTF \l__yoin_yoinprocess_alwayspageone_bool {
         \iow_now:Nx \g__yoin_yoinprocess_iow { firstpage ~ = ~ 1 , }
      } {
         \iow_now:Nx \g__yoin_yoinprocess_iow { firstpage ~ = ~ \int_use:N \g__yoin_page_int , }
      }
      \iow_now:Nx \g__yoin_yoinprocess_iow { parent ~ = ~ \jobname , }
      \iow_close:N \g__yoin_yoinprocess_iow
      \int_gadd:Nn \g__yoin_page_int { \yoin_yoinadd_prop_item:nn { ##1 } { totpages } }
   }
}
\DeclareDocumentCommand \yoinProcess { O{} } { \yoin_yoinprocess:n { #1 } }

\int_new:N \g__yoin_page_int
\iow_new:N \g__yoin_yoinprocess_iow

\cs_new_protected:Nn \__yoin_yoinprocess_cleardoublepage: {
   \bool_if:NT \l__yoin_yoinprocess_output_bool { \cleardoublepage }
   \int_if_even:nT { \g__yoin_page_int } { \int_gincr:N \g__yoin_page_int }
}

\cs_new_protected:Nn \__yoin_yoinprocess_clearonepage: {
   \bool_if:NT \l__yoin_yoinprocess_output_bool {
      \hbox {}\newpage \if@twocolumn \hbox {}\newpage \fi
   }
   \int_gincr:N \g__yoin_page_int
}

\bool_new:N \l__yoin_yoinprocess_cleardoublepage_bool
\bool_new:N \l__yoin_yoinprocess_output_bool
\bool_new:N \l__yoin_yoinprocess_openright_bool
\bool_new:N \l__yoin_yoinprocess_alwayspageone_bool
\bool_new:N \l__yoin_yoinprocess_setpagenumber_bool
\int_new:N \l__yoin_yoinprocess_setpagenumber_int
\keys_define:nn { yoin / yoinprocess } {

   cleardoublepage .bool_set:N = \l__yoin_yoinprocess_cleardoublepage_bool ,
   cleardoublepage .initial:n = { false },

   output .bool_set:N = \l__yoin_yoinprocess_output_bool ,
   output .initial:n = { true },

   openright .bool_set:N = \l__yoin_yoinprocess_openright_bool ,
   openany .bool_set_inverse:N = \l__yoin_yoinprocess_openright_bool ,
   openright .initial:n = { false },

   setpagenumber .code:n =
      \str_if_eq:nnTF { #1 } { false } {
         \bool_set_false:N \l__yoin_yoinprocess_setpagenumber_bool
      } {
         \bool_set_true:N \l__yoin_yoinprocess_setpagenumber_bool
         \int_set:Nn \l__yoin_yoinprocess_setpagenumber_int { #1 }
      }
      ,
   setpagenumber .initial:n = { false },

   alwayspageone .bool_set:N = \l__yoin_yoinprocess_alwayspageone_bool ,
   alwayspageone .initial:n = { false },

}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Nn \yoin_blabla: {
   Blabla
}

%% 
%% Copyright (C) 2016 by
%%   Some Guy <some.guy@some.domain>
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    http://www.latex-project.org/lppl.txt
%% 
%% This work is "maintained" (as per LPPL maintenance status) by
%%   Some Guy.
%% 
%% This work consists of the files yoin.dtx and
%%                                 yoin.ins
%%           and the derived file  yoin.sty
%% 
%%
%% End of file `yoin.sty'.
